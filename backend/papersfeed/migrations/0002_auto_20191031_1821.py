# Generated by Django 2.2.5 on 2019-10-31 18:21

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('papersfeed', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True, verbose_name='Creation Date')),
                ('modification_date', models.DateTimeField(auto_now=True, verbose_name='Modification Date')),
                ('title', models.CharField(max_length=400)),
                ('text', models.TextField()),
            ],
            options={
                'db_table': 'swpp_collection',
                'ordering': ['-pk'],
            },
        ),
        migrations.CreateModel(
            name='Reply',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True, verbose_name='Creation Date')),
                ('modification_date', models.DateTimeField(auto_now=True, verbose_name='Modification Date')),
                ('text', models.TextField()),
                ('user', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='reply_user', to='papersfeed.User')),
            ],
            options={
                'db_table': 'swpp_reply',
                'ordering': ['-pk'],
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True, verbose_name='Creation Date')),
                ('modification_date', models.DateTimeField(auto_now=True, verbose_name='Modification Date')),
                ('title', models.CharField(max_length=400)),
                ('text', models.TextField()),
                ('user', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='review_user', to='papersfeed.User')),
            ],
            options={
                'db_table': 'swpp_review',
                'ordering': ['-pk'],
            },
        ),
        migrations.RenameField(
            model_name='paperauthor',
            old_name='author_type',
            new_name='type',
        ),
        migrations.RenameField(
            model_name='paperkeyword',
            old_name='keyword_type',
            new_name='type',
        ),
        migrations.RenameField(
            model_name='publication',
            old_name='publication_type',
            new_name='type',
        ),
        migrations.CreateModel(
            name='ReviewPaper',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True, verbose_name='Creation Date')),
                ('modification_date', models.DateTimeField(auto_now=True, verbose_name='Modification Date')),
                ('paper', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='review_paper_paper', to='papersfeed.Paper')),
                ('review', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='review_paper_review', to='papersfeed.Review')),
            ],
            options={
                'db_table': 'swpp_review_paper',
                'ordering': ['-pk'],
            },
        ),
        migrations.CreateModel(
            name='ReviewLike',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True, verbose_name='Creation Date')),
                ('modification_date', models.DateTimeField(auto_now=True, verbose_name='Modification Date')),
                ('review', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='review_like_review', to='papersfeed.Review')),
                ('user', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='review_like_user', to='papersfeed.User')),
            ],
            options={
                'db_table': 'swpp_review_like',
                'ordering': ['-pk'],
            },
        ),
        migrations.CreateModel(
            name='ReplyReview',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True, verbose_name='Creation Date')),
                ('modification_date', models.DateTimeField(auto_now=True, verbose_name='Modification Date')),
                ('reply', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='reply_review_reply', to='papersfeed.Reply')),
                ('review', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='reply_review_review', to='papersfeed.Review')),
            ],
            options={
                'db_table': 'swpp_reply_review',
                'ordering': ['-pk'],
            },
        ),
        migrations.CreateModel(
            name='ReplyLike',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True, verbose_name='Creation Date')),
                ('modification_date', models.DateTimeField(auto_now=True, verbose_name='Modification Date')),
                ('reply', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='reply_like_reply', to='papersfeed.Reply')),
                ('user', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='reply_like_user', to='papersfeed.User')),
            ],
            options={
                'db_table': 'swpp_reply_like',
                'ordering': ['-pk'],
            },
        ),
        migrations.CreateModel(
            name='ReplyCollection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True, verbose_name='Creation Date')),
                ('modification_date', models.DateTimeField(auto_now=True, verbose_name='Modification Date')),
                ('collection', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='reply_collection_collection', to='papersfeed.Collection')),
                ('reply', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='reply_collection_reply', to='papersfeed.Reply')),
            ],
            options={
                'db_table': 'swpp_reply_collection',
                'ordering': ['-pk'],
            },
        ),
        migrations.CreateModel(
            name='PaperLike',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True, verbose_name='Creation Date')),
                ('modification_date', models.DateTimeField(auto_now=True, verbose_name='Modification Date')),
                ('paper', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='paper_like_paper', to='papersfeed.Paper')),
                ('user', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='paper_like_user', to='papersfeed.User')),
            ],
            options={
                'db_table': 'swpp_paper_like',
                'ordering': ['-pk'],
            },
        ),
    ]
