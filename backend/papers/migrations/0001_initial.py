# Generated by Django 2.2.5 on 2019-10-25 12:03

from django.db import migrations, models
import django.db.models.deletion
import django_mysql.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=50)),
                ('address', models.CharField(max_length=300)),
                ('researcher_id', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Keyword',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Paper',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=400)),
                ('language', models.CharField(max_length=20)),
                ('abstract', models.TextField(max_length=5000)),
                ('ISSN', models.CharField(max_length=20)),
                ('eISSN', models.CharField(max_length=20)),
                ('DOI', models.CharField(max_length=40)),
                ('file_url', models.URLField()),
                ('download_url', models.URLField()),
            ],
        ),
        migrations.CreateModel(
            name='PaperPublication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('volume', models.CharField(max_length=20, null=True)),
                ('issue', models.CharField(max_length=20, null=True)),
                ('date', models.DateField(null=True, verbose_name='date paper was published')),
                ('beginning_page', models.PositiveIntegerField(null=True)),
                ('ending_page', models.PositiveIntegerField(null=True)),
                ('ISBN', models.CharField(max_length=20)),
                ('paper', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='papers.Paper')),
            ],
        ),
        migrations.CreateModel(
            name='Publisher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('city', models.CharField(max_length=50)),
                ('address', models.CharField(max_length=300)),
            ],
        ),
        migrations.CreateModel(
            name='Reference',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('referenced_paper', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='referenced_paper', to='papers.Paper')),
                ('referencing_paper', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='referencing_paper', to='papers.Paper')),
            ],
        ),
        migrations.CreateModel(
            name='Publication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('publication_type', django_mysql.models.EnumField(choices=[('journal', 'journal'), ('book', 'book'), ('series', 'series'), ('patent', 'patent')])),
                ('papers', models.ManyToManyField(through='papers.PaperPublication', to='papers.Paper')),
                ('publisher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='papers.Publisher')),
            ],
        ),
        migrations.AddField(
            model_name='paperpublication',
            name='publication',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='papers.Publication'),
        ),
        migrations.CreateModel(
            name='PaperKeyword',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keyword_type', django_mysql.models.EnumField(choices=[('author', 'author'), ('web', 'web'), ('abstract', 'abstract')])),
                ('keyword', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='papers.Keyword')),
                ('paper', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='papers.Paper')),
            ],
        ),
        migrations.CreateModel(
            name='PaperAuthor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author_type', django_mysql.models.EnumField(choices=[('general', 'general'), ('corresponding', 'corresponding')])),
                ('rank', models.PositiveSmallIntegerField()),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='papers.Author')),
                ('paper', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='papers.Paper')),
            ],
        ),
        migrations.AddField(
            model_name='paper',
            name='references',
            field=models.ManyToManyField(through='papers.Reference', to='papers.Paper'),
        ),
        migrations.AddField(
            model_name='keyword',
            name='papers',
            field=models.ManyToManyField(through='papers.PaperKeyword', to='papers.Paper'),
        ),
        migrations.AddField(
            model_name='author',
            name='papers',
            field=models.ManyToManyField(through='papers.PaperAuthor', to='papers.Paper'),
        ),
    ]
